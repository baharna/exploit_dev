#!/usr/bin/python

# written for HP NNM 7.5, can be easily adapted to any http application though
# updated to properly cycle through HTTP methods

from boofuzz import *
from sys import exit

target_ip = "X.X.X.X"
target_port = 7510

def main():
    
    t = Target(connection = SocketConnection(target_ip, target_port, proto='tcp'))
    session = Session(target=t,sleep_time=.5,crash_threshold_element = 20)
    
    s_initialize(name="Request")
    with s_block("req", "Method"):
        # iterates through each request type, performs all tests for each request type
        # in order to iterate the s_group must be tied to the block AND there must be something in that block marked as fuzzable
        # so this instance will not work unless something is marked as fuzzable
        s_group("Method",["GET", "HEAD", "POST", "PUT", "DELETE", "CONNECT", "OPTIONS", "TRACE"])
        s_delim(" ", fuzzable=False)
        s_string("/topology/home", fuzzable=False)
        s_delim(" ", fuzzable=False)
        s_string("HTTP/1.1", fuzzable=False)
        s_static("\r\n")
        s_string("Host:", fuzzable=False)
        s_delim(" ", fuzzable=False)
        s_string("X.X.X.X")
        s_delim(":", fuzzable=False)
        s_string("7510")
        s_static("\r\n")
        s_string("User-Agent:", fuzzable=False)
        s_string("Mozilla/5.0 (X11, Linux x86_64; rv:60.0) Gecko/20100101 Firefox/60.0")
        s_static("\r\n")
    s_static("\r\n")

    
    session.connect(s_get("Request"))

    session.fuzz()


if __name__ == '__main__':
    main()
